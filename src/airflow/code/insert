-- Insert into dags
INSERT INTO dags (
    dag_id, description, schedule_interval, start_date, catchup, max_active_runs, concurrency, tags
) VALUES (
    'example_dynamic_dag',
    'An example DAG generated from SQLite configurations',
    '0 12 * * *', -- Daily at noon
    '2024-01-01',
    0,
    1,
    16,
    'example, dynamic'
);

-- Insert into task_groups
INSERT INTO task_groups (
    group_id, dag_id, tooltip
) VALUES (
    'processing_group',
    'example_dynamic_dag',
    'Group of processing tasks'
);

-- Insert into tasks
INSERT INTO tasks (
    task_id, dag_id, group_id, operator_class, operator_import, params, pool,
    priority_weight, retries, retry_delay, execution_timeout, sla, queue,
    trigger_rule, on_failure_callback, on_success_callback, resources
) VALUES (
    'start',
    'example_dynamic_dag',
    NULL,
    'DummyOperator',
    'airflow.operators.dummy',
    '{}',
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
);

INSERT INTO tasks (
    task_id, dag_id, group_id, operator_class, operator_import, params, pool,
    priority_weight, retries, retry_delay, execution_timeout, sla, queue,
    trigger_rule, on_failure_callback, on_success_callback, resources
) VALUES (
    'branch_task',
    'example_dynamic_dag',
    NULL,
    'BranchPythonOperator',
    'airflow.operators.branch',
    '{"python_callable": "choose_branch"}',
    NULL,
    NULL,
    3,
    600,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
);

INSERT INTO tasks (
    task_id, dag_id, group_id, operator_class, operator_import, params, pool,
    priority_weight, retries, retry_delay, execution_timeout, sla, queue,
    trigger_rule, on_failure_callback, on_success_callback, resources
) VALUES (
    'task_a',
    'example_dynamic_dag',
    'processing_group',
    'PythonOperator',
    'airflow.operators.python',
    '{"python_callable": "process_a"}',
    'high_memory_pool',
    10,
    2,
    300,
    NULL,
    NULL,
    'default_queue',
    NULL,
    NULL,
    NULL,
    '{"cpus": "1", "ram": "1024M"}'
);

INSERT INTO tasks (
    task_id, dag_id, group_id, operator_class, operator_import, params, pool,
    priority_weight, retries, retry_delay, execution_timeout, sla, queue,
    trigger_rule, on_failure_callback, on_success_callback, resources
) VALUES (
    'task_b',
    'example_dynamic_dag',
    'processing_group',
    'PythonOperator',
    'airflow.operators.python',
    '{"python_callable": "process_b"}',
    'standard_pool',
    5,
    1,
    300,
    NULL,
    NULL,
    'default_queue',
    NULL,
    NULL,
    NULL,
    '{"cpus": "1", "ram": "512M"}'
);

INSERT INTO tasks (
    task_id, dag_id, group_id, operator_class, operator_import, params, pool,
    priority_weight, retries, retry_delay, execution_timeout, sla, queue,
    trigger_rule, on_failure_callback, on_success_callback, resources
) VALUES (
    'join',
    'example_dynamic_dag',
    NULL,
    'DummyOperator',
    'airflow.operators.dummy',
    '{}',
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    'none_failed_or_skipped',
    NULL,
    NULL,
    NULL
);

-- Insert into dependencies
INSERT INTO dependencies (
    dag_id, type, upstream, downstream
) VALUES (
    'example_dynamic_dag',
    'sequential',
    'start',
    'branch_task'
);

INSERT INTO dependencies (
    dag_id, type, branch_task, branch_options
) VALUES (
    'example_dynamic_dag',
    'branch',
    'branch_task',
    'task_a,task_b'
);

INSERT INTO dependencies (
    dag_id, type, upstream, downstream
) VALUES (
    'example_dynamic_dag',
    'join',
    'task_a,task_b',
    'join'
);

-- Insert into external_task_sensors
INSERT INTO external_task_sensors (
    dag_id, task_id, external_dag_id, external_task_id, execution_delta,
    execution_date_fn, timeout, poke_interval, mode
) VALUES (
    'example_dynamic_dag',
    'wait_for_external_task',
    'external_dag',
    'external_task',
    1800, -- 30 minutes in seconds
    NULL,
    600, -- 10 minutes in seconds
    60, -- 1 minute in seconds
    'poke'
);

-- Insert into custom_functions
INSERT INTO custom_functions (
    dag_id, module, function
) VALUES (
    'example_dynamic_dag',
    'my_package.my_module',
    'choose_branch'
);

-- Insert into dynamic_tasks
INSERT INTO dynamic_tasks (
    dag_id, task_id, operator_class, operator_import, params
) VALUES (
    'example_dynamic_dag',
    'dynamic_task',
    'PythonOperator',
    'airflow.operators.python',
    '{"python_callable": "process_item", "op_kwargs": {"item": "{{ ti.xcom_pull(task_ids=\'generate_items\') }}"}}'
);

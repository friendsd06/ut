from typing import Protocol, List
from ..domain.models import DAGConfig, TaskConfig, DependencyConfig

class ConfigurationRepository(Protocol):
    def load_dag(self, dag_id: str) -> DAGConfig: ...
    def load_tasks(self, dag_id: str) -> List[TaskConfig]: ...
    def load_dependencies(self, dag_id: str) -> List[DependencyConfig]: ...
    def validate_dag_exists(self, dag_id: str) -> bool: ...
    def save_dag(self, dag: DAGConfig) -> None: ...
    def save_task(self, dag_id: str, task: TaskConfig) -> None: ...
    def save_dependency(self, dag_id: str, dependency: DependencyConfig) -> None: ...

class TemplateService(Protocol):
    def render(self, template: str, context: dict) -> str: ...
    def validate_template(self, template: str) -> List[str]: ...

class StorageService(Protocol):
    def save(self, path: str, content: str) -> None: ...
    def exists(self, path: str) -> bool: ...
    def backup(self, path: str) -> None: ...
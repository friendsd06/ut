from airflow import DAG
from datetime import datetime, timedelta

{% for operator, module in imports.items() %}
from {{ module }} import {{ operator }}
{% endfor %}

def print_date(msg):
    """Example Python callable"""
    from datetime import datetime
    print(f"{msg}: {datetime.now()}")

with DAG(
    dag_id='{{ dag.id }}',
    description='{{ dag.description }}',
    schedule_interval='{{ dag.schedule }}',
    start_date=datetime.fromisoformat('{{ dag.start_date.isoformat() }}'),
    tags={{ dag.tags }},
    **{{ dag.settings }}
) as dag:
    {% for task in tasks %}
    {{ task.id }} = {{ task.type.value }}(
        task_id='{{ task.id }}',
        **{{ task.config }}
    )
    {% endfor %}

    {% for dep in dependencies %}
    {% if dep.type.value == 'sequential' %}
    {% for from_task in dep.from_tasks %}
    {% for to_task in dep.to_tasks %}
    {{ from_task }} >> {{ to_task }}
    {% endfor %}
    {% endfor %}
    {% endif %}
    {% endfor %}
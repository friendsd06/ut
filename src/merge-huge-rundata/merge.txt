The choice between setting maxRecordsPerFile to 0 or 10000 can significantly impact merge performance, and the optimal setting depends on your specific use case. Let's break down both scenarios:

maxRecordsPerFile = 0:

This setting effectively disables the limit on records per file.
Spark will determine the file size based on other factors like block size and compression.


maxRecordsPerFile = 10000:

This limits each file to a maximum of 10,000 records.
It creates more, smaller files compared to the unlimited setting.



In the context of merge operations, here's how these settings typically impact performance:
For maxRecordsPerFile = 0 (unlimited):
Pros:

Fewer, larger files are created, which can be more efficient for large-scale reads.
Reduced metadata overhead as there are fewer files to track.
Often faster for bulk operations and full table scans.

Cons:

May lead to larger file sizes, which can be less efficient for small, selective queries.
Can result in more data being rewritten during updates if files are very large.

For maxRecordsPerFile = 10000:
Pros:

More granular file sizes, which can be beneficial for selective queries.
Can lead to less data being rewritten during updates, as changes are more localized.
Potentially faster for merge operations that affect a small portion of the data.

Cons:

Increased metadata overhead due to more files.
May lead to small file problems if not managed properly.
Can be slower for full table scans due to the need to open more files.

Which is faster for merges?
In most cases, setting maxRecordsPerFile = 10000 (or a similar reasonable value) is likely to be faster for merge operations, especially if:

Your merges typically affect a small to moderate portion of the data.
You frequently perform selective queries on the table.
Your data is well-partitioned, and merges often affect specific partitions.

However, if your merge operations frequently affect large portions of the table or if you often perform full table scans, setting maxRecordsPerFile = 0 might be more efficient
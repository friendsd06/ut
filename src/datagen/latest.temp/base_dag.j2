"""
DAG: {{ metadata.dag_config.dag_id }}
Description: {{ metadata.dag_config.description }}
Generated at: {{ now() }}
Owner: {{ metadata.dag_config.owner }}
"""

{% block imports %}
{% include "imports.j2" %}
{% endblock %}

# Default Arguments
default_args = {
    "owner": "{{ metadata.dag_config.owner }}",
    "start_date": {{ metadata.dag_config.start_date | datetime_to_code }},
    {% if metadata.dag_config.end_date %}
    "end_date": {{ metadata.dag_config.end_date | datetime_to_code }},
    {% endif %}
    "retries": {{ metadata.dag_config.retries }},
    "retry_delay": {{ metadata.dag_config.retry_delay_minutes | timedelta_to_code }},
    {% if metadata.dag_config.email_on_failure is defined %}
    "email_on_failure": {{ metadata.dag_config.email_on_failure }},
    {% endif %}
    {% if metadata.dag_config.email_on_retry is defined %}
    "email_on_retry": {{ metadata.dag_config.email_on_retry }},
    {% endif %}
    {% if metadata.dag_config.email is defined %}
    "email": {{ metadata.dag_config.email }},
    {% endif %}
    {# Removed the loop over metadata.dag_config.default_args #}
}

with DAG(
    dag_id="{{ metadata.dag_config.dag_id }}",
    default_args=default_args,
    description="{{ metadata.dag_config.description }}",
    schedule_interval="{{ metadata.dag_config.schedule_interval }}",
    catchup={{ metadata.dag_config.catchup }},
    max_active_runs={{ metadata.dag_config.max_active_runs }},
    {% if metadata.dag_config.concurrency %}
    concurrency={{ metadata.dag_config.concurrency }},
    {% endif %}
) as dag:

    {% for task in metadata.tasks %}
    {{ task.task_id }} = {{ render_task(task) }}
    {% endfor %}

    {# Set Dependencies #}
    {% for dep in metadata.dependencies %}
    {{ dep.upstream_task_id }} >> {{ dep.downstream_task_id }}
    {% endfor %}
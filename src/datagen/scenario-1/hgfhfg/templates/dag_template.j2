{# templates/dag_template.j2 #}
{% extends "base_dag.j2" %}

{% from "operators/python_operator.j2" import render_python_operator %}
{% from "operators/postgres_operator.j2" import render_postgres_operator %}
{% from "operators/bash_operator.j2" import render_bash_operator %}
{% from "operators/sensor_operator.j2" import render_sensor_operator %}
{% from "operators/http_operator.j2" import render_http_operator %}
{% from "operators/email_operator.j2" import render_email_operator %}
{% from "operators/branch_operator.j2" import render_branch_operator %}

{% block dag_content %}
    {% macro render_task(task) %}
        {% if task.operator_type == 'BranchPythonOperator' %}
            {{ render_branch_operator(task) }}
        {% elif task.operator_type == 'PythonOperator' %}
            {{ render_python_operator(task) }}
        {% elif task.operator_type == 'PostgresOperator' %}
            {{ render_postgres_operator(task) }}
        {% elif task.operator_type == 'BashOperator' %}
            {{ render_bash_operator(task) }}
        {% elif task.operator_type == 'ExternalTaskSensor' %}
            {{ render_sensor_operator(task) }}
        {% elif task.operator_type == 'HttpOperator' %}
            {{ render_http_operator(task) }}
        {% elif task.operator_type == 'EmailOperator' %}
            {{ render_email_operator(task) }}
        {% else %}
            EmptyOperator(task_id="{{ task.task_id }}")
        {% endif %}
    {% endmacro %}

    # Render tasks outside of groups
    {% for task in metadata.tasks if not task.group_id %}
    {{ task.task_id }} = {{ render_task(task) }}
    {% endfor %}

    # Render task groups
    {% if metadata.task_groups %}
    {% for group in metadata.task_groups %}
    with TaskGroup(
        group_id="{{ group.group_name }}",
        {% if group.tooltip %}
        tooltip="{{ group.tooltip }}",
        {% endif %}
        {% if group.prefix_group_id is defined %}
        prefix_group_id={{ group.prefix_group_id }},
        {% endif %}
    ) as {{ group.group_name }}:
        {% for task in metadata.tasks if task.group_id == group.group_id %}
    {{ task.task_id }} = {{ render_task(task) }}
        {% endfor %}
    {% endfor %}
    {% endif %}

    # Define dependencies
{% for dep in metadata.dependencies %}
    {% set task = metadata.tasks | selectattr('task_id', 'equalto', dep.current_task) | list | first %}

    {% if dep.downstream_task_ids and dep.downstream_task_ids != '[null]' %}
        {% set downstream_list = dep.downstream_task_ids.split(',') | map('trim') | list %}

        {% if task.operator_type == 'BranchPythonOperator' %}
            {{ dep.current_task }} >> [{{ downstream_list | join(', ') }}]
        {% else %}
            {% for downstream in downstream_list %}
                {{ dep.current_task }} >> {{ downstream }}
            {% endfor %}
        {% endif %}
    {% endif %}
{% endfor %}
{% endblock %}

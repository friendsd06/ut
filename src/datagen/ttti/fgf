CREATE TABLE IF NOT EXISTS public.pipeline
(
    pipelineid varchar(100) NOT NULL,
    pipelinename varchar(100) NOT NULL,
    schedule_interval varchar(50),
    start_date timestamp without time zone,
    catchup boolean DEFAULT false,
    max_active_runs integer DEFAULT 1,
    concurrency integer DEFAULT 1,
    retries integer DEFAULT 0,
    retry_delay_minutes integer DEFAULT 5,
    dag_timeout_minutes integer DEFAULT 60,
    owner varchar(100),
    email_on_failure boolean DEFAULT true,
    email_on_retry boolean DEFAULT false,
    notification_emails varchar[],
    is_active boolean DEFAULT true,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pipeline_pkey PRIMARY KEY (pipelineid)
)


CREATE TABLE IF NOT EXISTS public.pipelinedatasets
(
    pipelineid varchar(100) NOT NULL,
    datasetid varchar(100) NOT NULL,
    datasetentrytype varchar(3) NOT NULL,
    CONSTRAINT pipeline_datasets_pk PRIMARY KEY (pipelineid, datasetid),
    CONSTRAINT dataset_entry_type_check CHECK (datasetentrytype = ANY (ARRAY['IN', 'OUT']))
)

CREATE TABLE IF NOT EXISTS public.task_dataset_mapping
(
    taskid varchar(100) NOT NULL,
    datasetid varchar(100) NOT NULL,
    pipelineid varchar(100) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT task_dataset_mapping_pkey PRIMARY KEY (taskid, datasetid, pipelineid),
    CONSTRAINT fk_dataset FOREIGN KEY (datasetid)
        REFERENCES public.datasets (datasetid)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_pipeline FOREIGN KEY (pipelineid)
        REFERENCES public.pipeline (pipelineid)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_task FOREIGN KEY (taskid)
        REFERENCES public.tasks (taskid)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

CREATE TABLE IF NOT EXISTS public.taskdependencies
(
    pipelineid character varying(100) NOT NULL,
    taskid character varying(100) NOT NULL,
    dependenttaskid character varying(100),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT taskdependencies_pkey PRIMARY KEY (pipelineid, taskid),
    CONSTRAINT taskdependencies_dependenttaskid_fkey FOREIGN KEY (dependenttaskid)
        REFERENCES public.tasks (taskid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT taskdependencies_pipelineid_fkey FOREIGN KEY (pipelineid)
        REFERENCES public.pipeline (pipelineid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT taskdependencies_taskid_fkey FOREIGN KEY (taskid)
        REFERENCES public.tasks (taskid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS public.tasks
(
    taskid character varying(100) NOT NULL,
    taskname character varying(100) NOT NULL,
    taskgroup character varying(100),
    pipelineid character varying(100) NOT NULL,
    operator_type character varying(50) NOT NULL,
    dependencytype character varying(50),
    task_params jsonb DEFAULT '{}'::jsonb,
    trigger_rule character varying(50),
    task_timeout_minutes integer DEFAULT 30,
    task_retries integer DEFAULT 3,
    retry_delay interval DEFAULT '00:05:00'::interval,
    task_priority_weight integer DEFAULT 1,
    task_queue character varying(50),
    pool character varying(50) DEFAULT 'default_pool'::character varying,
    execution_timeout interval,
    depends_on_past boolean DEFAULT false,
    wait_for_downstream boolean DEFAULT false,
    email_on_failure boolean DEFAULT true,
    email_on_retry boolean DEFAULT false,
    on_success_callback text,
    on_failure_callback text,
    on_retry_callback text,
    sla interval,
    doc text,
    doc_md text,
    doc_rst text,
    doc_json text,
    doc_yaml text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    status character varying(50),
    python_callable character varying(100),
    CONSTRAINT tasks_pkey PRIMARY KEY (taskid),
    CONSTRAINT tasks_pipelineid_fkey FOREIGN KEY (pipelineid)
        REFERENCES public.pipeline (pipelineid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
# Sequential pipeline test data
pipeline_data = [
    {"pipelineid": "sequential_pipeline", "taskid": "extract_data", "dependenttaskid": None},
    {"pipelineid": "sequential_pipeline", "taskid": "validate_data", "dependenttaskid": "extract_data"},
    {"pipelineid": "sequential_pipeline", "taskid": "transform_data", "dependenttaskid": "validate_data"},
    {"pipelineid": "sequential_pipeline", "taskid": "load_data", "dependenttaskid": "transform_data"}
]

task_metadata = [
    {"taskid": "extract_data", "operator": "PostgresOperator", "dependencytype": "sequential"},
    {"taskid": "validate_data", "operator": "PythonOperator", "dependencytype": "sequential"},
    {"taskid": "transform_data", "operator": "SparkOperator", "dependencytype": "sequential"},
    {"taskid": "load_data", "operator": "S3ToRedshiftOperator", "dependencytype": "sequential"}
]



# Parallel pipeline test data
pipeline_data = [
    {"pipelineid": "parallel_pipeline", "taskid": "fetch_data", "dependenttaskid": None},
    {"pipelineid": "parallel_pipeline", "taskid": "process_customer", "dependenttaskid": "fetch_data"},
    {"pipelineid": "parallel_pipeline", "taskid": "process_orders", "dependenttaskid": "fetch_data"},
    {"pipelineid": "parallel_pipeline", "taskid": "process_inventory", "dependenttaskid": "fetch_data"},
    {"pipelineid": "parallel_pipeline", "taskid": "merge_results", "dependenttaskid": ["process_customer", "process_orders", "process_inventory"]}
]

task_metadata = [
    {"taskid": "fetch_data", "operator": "PythonOperator", "dependencytype": "sequential"},
    {"taskid": "process_customer", "operator": "PythonOperator", "dependencytype": "parallel"},
    {"taskid": "process_orders", "operator": "PythonOperator", "dependencytype": "parallel"},
    {"taskid": "process_inventory", "operator": "PythonOperator", "dependencytype": "parallel"},
    {"taskid": "merge_results", "operator": "PythonOperator", "dependencytype": "sequential"}
]

# Conditional pipeline test data
pipeline_data = [
    {"pipelineid": "conditional_pipeline", "taskid": "check_file", "dependenttaskid": None},
    {"pipelineid": "conditional_pipeline", "taskid": "process_csv", "dependenttaskid": "check_file"},
    {"pipelineid": "conditional_pipeline", "taskid": "process_json", "dependenttaskid": "check_file"},
    {"pipelineid": "conditional_pipeline", "taskid": "save_results", "dependenttaskid": ["process_csv", "process_json"]}
]

task_metadata = [
    {"taskid": "check_file", "operator": "FileSensorOperator", "dependencytype": "sequential"},
    {"taskid": "process_csv", "operator": "PythonOperator", "dependencytype": "conditional"},
    {"taskid": "process_json", "operator": "PythonOperator", "dependencytype": "conditional"},
    {"taskid": "save_results", "operator": "S3OperatorCustom", "dependencytype": "sequential"}
]


# Mixed pipeline test data
pipeline_data = [
    {"pipelineid": "mixed_pipeline", "taskid": "start", "dependenttaskid": None},
    {"pipelineid": "mixed_pipeline", "taskid": "check_type", "dependenttaskid": "start"},
    {"pipelineid": "mixed_pipeline", "taskid": "process_1", "dependenttaskid": "check_type"},
    {"pipelineid": "mixed_pipeline", "taskid": "process_2a", "dependenttaskid": "process_1"},
    {"pipelineid": "mixed_pipeline", "taskid": "process_2b", "dependenttaskid": "process_1"},
    {"pipelineid": "mixed_pipeline", "taskid": "process_2c", "dependenttaskid": "process_1"},
    {"pipelineid": "mixed_pipeline", "taskid": "join", "dependenttaskid": ["process_2a", "process_2b", "process_2c"]},
    {"pipelineid": "mixed_pipeline", "taskid": "end", "dependenttaskid": "join"}
]

task_metadata = [
    {"taskid": "start", "operator": "PythonOperator", "dependencytype": "sequential"},
    {"taskid": "check_type", "operator": "BranchPythonOperator", "dependencytype": "conditional"},
    {"taskid": "process_1", "operator": "PythonOperator", "dependencytype": "sequential"},
    {"taskid": "process_2a", "operator": "PythonOperator", "dependencytype": "parallel"},
    {"taskid": "process_2b", "operator": "PythonOperator", "dependencytype": "parallel"},
    {"taskid": "process_2c", "operator": "PythonOperator", "dependencytype": "parallel"},
    {"taskid": "join", "operator": "PythonOperator", "dependencytype": "sequential"},
    {"taskid": "end", "operator": "PythonOperator", "dependencytype": "sequential"}
]

# Cyclic pipeline test data (for testing cycle detection)
pipeline_data = [
    {"pipelineid": "cyclic_pipeline", "taskid": "task_a", "dependenttaskid": "task_c"},
    {"pipelineid": "cyclic_pipeline", "taskid": "task_b", "dependenttaskid": "task_a"},
    {"pipelineid": "cyclic_pipeline", "taskid": "task_c", "dependenttaskid": "task_b"}
]

task_metadata = [
    {"taskid": "task_a", "operator": "PythonOperator", "dependencytype": "sequential"},
    {"taskid": "task_b", "operator": "PythonOperator", "dependencytype": "sequential"},
    {"taskid": "task_c", "operator": "PythonOperator", "dependencytype": "sequential"}
]
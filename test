Analyze entire Java application and generate comprehensive HTML production support dashboard.

[PASTE EVERYTHING - All .java files, config files (application.properties, web.xml, log4j.xml), build files (pom.xml/build.gradle)]

Generate single interactive HTML with tabs:

TAB 1: Architecture Map
- All components with connections
- Entry points (Servlets/REST endpoints/Main class)
- Business logic components
- Data access components  
- External integrations
- Click component → show what to check when it fails

TAB 2: Issue Diagnosis Wizard
- Dropdown: Select symptom
  * Application slow
  * Getting errors
  * Data not saving
  * External service failing
  * Memory issues
  * CPU high
- Shows:
  * Which component to check first
  * What logs to search
  * What metrics to verify
  * Common causes
  * Quick fixes

TAB 3: Component Health Check
- Checklist for each component:
  * [ ] Component X - Check logs: [grep command]
  * [ ] Component Y - Verify connection: [test command]
  * [ ] Component Z - Check response time: [metric]
- Status indicators (healthy/degraded/failed)

TAB 4: Log Analysis Guide
- Log file locations
- Key log patterns to search:
  * "ERROR" → Critical failures
  * "Exception" → Code errors  
  * "timeout" → Performance issues
  * "connection" → Network/DB issues
- Grep commands for common problems
- Log level meanings (INFO/WARN/ERROR)

TAB 5: Data Flow Debugger
- Trace data through system
- Show transformations at each step
- Identify where data gets corrupted/lost
- Validation checkpoints

TAB 6: Configuration Reference
- All config parameters
- What each config controls
- Default vs current values
- Which component uses which config
- What happens if misconfigured

TAB 7: Quick Fixes & Runbooks
For each common issue:
- Symptom
- Root cause
- Step-by-step fix
- Prevention tips
- Restart procedures
- Rollback steps

TAB 8: Performance Baselines
- Expected response times per operation
- Normal CPU/Memory usage
- Database query counts
- Thread pool sizes
- Connection pool settings

TAB 9: Dependency Map
- External services called
- Database connections
- File system dependencies
- Network endpoints
- Third-party libraries used

TAB 10: Emergency Procedures
- Application won't start → Check [A, B, C]
- Out of memory → Check [X, Y, Z]
- Database down → Check [P, Q, R]
- All requests failing → Check [L, M, N]

Features: Global search, filter by component, printable, works offline, no external dependencies, copy commands with one click
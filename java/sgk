import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

/**
 * Simple Java program to test connectivity to Databricks SQL Warehouse
 */
public class DatabricksSQLConnectionTest {

    // Databricks SQL Warehouse connection parameters
    private static final String JDBC_URL = "jdbc:databricks://yourworkspace.cloud.databricks.com:443/default;transportMode=http;ssl=1;httpPath=sql/protocolv1/o/0123456789/0987654321";
    private static final String TOKEN = "dapi_yourpersonalaccesstoken";
    private static final String AUTH_MECHANISM = "TOKEN"; // For personal access token auth

    public static void main(String[] args) {
        System.out.println("Databricks SQL Warehouse Connection Test");
        System.out.println("---------------------------------------");

        // Load JDBC Driver
        try {
            Class.forName("com.databricks.client.jdbc.Driver");
            System.out.println("✓ JDBC Driver loaded successfully");
        } catch (ClassNotFoundException e) {
            System.err.println("✗ Failed to load JDBC driver: " + e.getMessage());
            System.err.println("Make sure databricks-jdbc.jar is in your classpath");
            System.exit(1);
        }

        // Connection parameters
        Properties connectionProperties = new Properties();
        connectionProperties.put("AuthMech", getAuthMech(AUTH_MECHANISM));
        connectionProperties.put("PWD", TOKEN); // Using token for authentication
        
        // Additional properties - uncomment if needed
        // connectionProperties.put("ssl", "1");
        // connectionProperties.put("ConnCatalog", "your_catalog");
        // connectionProperties.put("ConnSchema", "your_schema");
        // connectionProperties.put("UID", "token"); // When using AUTH_MECHANISM="TOKEN"

        // Test connection and execute query
        try (Connection connection = DriverManager.getConnection(JDBC_URL, connectionProperties)) {
            System.out.println("✓ Connected to Databricks SQL Warehouse successfully!");
            
            // Execute a simple query
            testSimpleQuery(connection);
            
            // Test metadata
            testMetadata(connection);
            
        } catch (SQLException e) {
            System.err.println("✗ Connection failed: " + e.getMessage());
            Throwable cause = e.getCause();
            if (cause != null) {
                System.err.println("Caused by: " + cause.getMessage());
            }
            e.printStackTrace();
            System.exit(1);
        }
    }

    /**
     * Execute a simple query to test the connection
     */
    private static void testSimpleQuery(Connection connection) {
        System.out.println("\nExecuting simple test query...");
        
        String query = "SELECT 'Hello Databricks' AS greeting, CURRENT_TIMESTAMP() AS current_time";
        
        try (Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery(query)) {
            
            // Print column names
            ResultSetMetaData metaData = resultSet.getMetaData();
            int columnCount = metaData.getColumnCount();
            
            for (int i = 1; i <= columnCount; i++) {
                System.out.print(metaData.getColumnName(i));
                if (i < columnCount) System.out.print(" | ");
            }
            System.out.println("\n" + "-".repeat(50));
            
            // Print result data
            while (resultSet.next()) {
                for (int i = 1; i <= columnCount; i++) {
                    System.out.print(resultSet.getString(i));
                    if (i < columnCount) System.out.print(" | ");
                }
                System.out.println();
            }
            
            System.out.println("\n✓ Query executed successfully");
            
        } catch (SQLException e) {
            System.err.println("✗ Query execution failed: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * Test retrieving catalog/schema metadata
     */
    private static void testMetadata(Connection connection) {
        System.out.println("\nRetrieving available catalogs and schemas...");
        
        try {
            // List catalogs
            try (ResultSet catalogs = connection.getMetaData().getCatalogs()) {
                System.out.println("\nAvailable Catalogs:");
                System.out.println("-----------------");
                while (catalogs.next()) {
                    String catalogName = catalogs.getString("TABLE_CAT");
                    System.out.println(catalogName);
                    
                    // For each catalog, list schemas
                    try (ResultSet schemas = connection.getMetaData().getSchemas(catalogName, null)) {
                        System.out.println("  Schemas:");
                        while (schemas.next()) {
                            String schemaName = schemas.getString("TABLE_SCHEM");
                            System.out.println("    - " + schemaName);
                        }
                    }
                }
            }
            
            System.out.println("\n✓ Metadata retrieved successfully");
            
        } catch (SQLException e) {
            System.err.println("✗ Metadata retrieval failed: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * Convert auth mechanism string to the appropriate numeric value
     */
    private static String getAuthMech(String authMechanism) {
        return switch (authMechanism.toUpperCase()) {
            case "TOKEN" -> "3"; // Personal Access Token
            case "USERNAME_PASSWORD" -> "3"; // Username/password with OAuth
            case "AAD" -> "11"; // Azure AD
            default -> "3"; // Default to token
        };
    }
}